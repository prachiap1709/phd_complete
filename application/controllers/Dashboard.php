<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Dashboard extends CI_Controller {	function __construct() {        parent::__construct();		error_reporting(0);		$this->load->model('admin_model');		$this->load->model('catalog_model');		$this->load->library('Mandrill_Api');    }		public function index()	{		if($this->session->userdata('adm_logged_in') == true)		{			$data['module'] = 'dashboard';								$data['main_content'] = 'dashboard';					$data['account_manager']	=	$this->input->post('account_manager');			$data['keywords']			=	$this->input->post('keywords');			$data['client_from_date']	=	$this->input->post('client_from_date');			$data['client_to_date']		=	$this->input->post('client_to_date');			$data['client_status']		=	$this->input->post('client_status');						$data['tagtype']			=	$this->input->post('tagtype');			$data['clienttag']			=	$this->input->post('clienttag');			$data['selectedtagdata']	=	$this->input->post('selectedtagdata');						$accountmanageid = '';			if($this->session->userdata('adm_admin_type')=='CRM')			{				$accountmanageid = $this->session->userdata('adm_admin_id');			}						$data['mtitle'] 			=  'Dashboard : '.WEBNAME;			$data['result_client'] 		=  $this->admin_model->viewrecord('','CLIENT',$accountmanageid);			//$data['result_booking'] 	=  $this->catalog_model->viewpayments('','','','','','','','SLOT_BOOK');			$this->load->view('common/template.php',$data);		}		else		{			redirect(base_url());		}	}	public function setting()	{		if($this->session->userdata('adm_logged_in') == true && $this->session->userdata('adm_admin_type') == 'SUPERADMIN')		{			$data['module'] = 'setting';								$data['mtitle'] =  'Setting :  '.WEBNAME;			$data['result_currency'] = $this->admin_model->viewcurrency();			$data['main_content'] = 'admin/setting';			$this->load->view('common/template.php',$data);		}		else		{			redirect(base_url());		}	}		public function sendbookingmailer()	{		if($this->session->userdata('adm_logged_in') == true && ($this->session->userdata('adm_admin_type') == 'SUPERADMIN' || $this->session->userdata('adm_admin_type') == 'EXECUTIVE'))		{			$bookingid 			= trim($this->input->post('bookingid'));			$consultantid 		= trim($this->input->post('consultantid'));			$admin_name 		= trim($this->input->post('admin_name'));			$consultantemail 	= trim($this->input->post('consultantemail'));			$userid 			= trim($this->input->post('userid'));			$username 			= trim($this->input->post('username'));			$useremail 			= trim($this->input->post('useremail'));			$subject 			= trim($this->input->post('subject'));			$mail_body 			= trim($this->input->post('mail_body'));			$meeting_date 		= trim($this->input->post('meeting_date'));			$meeting_time 		= trim($this->input->post('meeting_time'));			$signature 			= trim($this->input->post('signature'));			//preTagdata($_REQUEST);			//exit;						if($bookingid>0 && $consultantid>0 && $userid>0 && $consultantemail!="" && $useremail!="")			{				$executive_replies = getexecutive_replies($bookingid,$consultantid,$userid);				if($executive_replies->id>0)				{					$this->session->set_userdata('alert_type', 'danger');					$this->session->set_userdata('msg', 'Reply already sent!');					redirect(base_url().'admin/booking_detail/'.$bookingid);				}								$mandrill = new Mandrill(MANDRILL_KEY);								$body = "Dear ".$username.", <br/><br/> Greetings<br/><br/>";				$body.= $mail_body;					$body.=	'<br/>';				$body.= '<strong>Booking Date: </strong>'.$meeting_date.'<br/>';				$body.= '<strong>Booking Time: </strong>'.$meeting_time.'<br/>';				$body.=	'<br/>';								$body.= $signature;								$data2 = array(					'fld_userid'    		=> $userid,					'fld_consultantid' 		=> $consultantid,					'fld_executiveid' 		=> $this->session->userdata('adm_admin_id'),					'fld_bookingid' 		=> $bookingid,					'fld_email_subject' 	=> $subject,					'fld_email_template' 	=> $body,					'fld_addedon'			=> date('Y-m-d H:i:s')				);				$query = $this->db->insert('tbl_executive_replies',$data2);				$insertid = $this->db->insert_id();								//echo $body;				//exit;								$message = array(					'html' => $body,					'subject' => $subject,					'from_email' => FROM_EMAIL,					'from_name' => FROM_NAME,					'to' => array(						array(						'email' => $useremail, 						'name' => $username,						'type' => 'to'						),						array(						'email' => $consultantemail, 						'name' => $admin_name,						'type' => 'bcc'						)					)				);				$async = false;				$ip_pool = '';				if($_SERVER['HTTP_HOST']!="localhost")				{					$result = $mandrill->messages->send($message, $async, $ip_pool);				}								$this->session->set_userdata('alert_type', 'success');				$this->session->set_userdata('msg', 'Reminder sent successfully');				redirect(base_url().'admin/booking_detail/'.$bookingid);			}			else			{				$this->session->set_userdata('alert_type', 'danger');				$this->session->set_userdata('msg', 'Reminder not sent!');				redirect(base_url().'admin/booking_detail/'.$bookingid);			}		}		else		{			redirect(base_url());		}	}	public function insertreminderdate()	{		if($this->session->userdata('adm_logged_in') == true && ($this->session->userdata('adm_admin_type') == 'SUPERADMIN' || $this->session->userdata('adm_admin_type') == 'EXECUTIVE'))		{			$bookingid 			= trim($this->input->post('bookingid'));			$consultantid 		= trim($this->input->post('consultantid'));			$userid 			= trim($this->input->post('userid'));			$admin_name 		= trim($this->input->post('admin_name'));			$consultantemail 	= trim($this->input->post('consultantemail'));			$username 			= trim($this->input->post('username'));			$useremail 			= trim($this->input->post('useremail'));			$rmdate_data 		= $this->input->post('rmdate_data');						//preTagdata($_REQUEST);			//exit;						if($bookingid>0 && $consultantid>0 && $userid>0)			{				$this->db->select('*');				$this->db->from('tbl_booking_reminder');				$this->db->group_start();				$this->db->where('fld_bookingid',$bookingid);				$this->db->where('fld_consultantid',$consultantid);				$this->db->where('fld_userid',$userid);				$this->db->group_end();				$query = $this->db->get();				$this->db->last_query();				$query->num_rows();				if($query->num_rows()==0)				{					$data2 = array(						'fld_userid'    		=> $userid,						'fld_consultantid' 		=> $consultantid,						'fld_executiveid' 		=> $this->session->userdata('adm_admin_id'),						'fld_bookingid' 		=> $bookingid,						'fld_reminder_date' 	=> implode(',',$rmdate_data),						'fld_addedon'			=> date('Y-m-d H:i:s')					);					$query = $this->db->insert('tbl_booking_reminder',$data2);					$insertid = $this->db->insert_id();				}				else				{					$result = $query->row();										$data2 = array(						'fld_reminder_date' 	=> implode(',',$rmdate_data),					);					$this->db->where('id', $result->id);					$this->db->update('tbl_booking_reminder',$data2);				}								$this->session->set_userdata('alert_type', 'success');				$this->session->set_userdata('msg', 'Reminder date updated');				redirect(base_url().'admin/reminder/'.$bookingid);			}			else			{				$this->session->set_userdata('alert_type', 'danger');				$this->session->set_userdata('msg', 'Reminder not date updated!');				redirect(base_url().'admin/reminder/'.$bookingid);			}		}		else		{			redirect(base_url());		}	}		public function logout()	{		if($this->session->userdata('adm_admin_loginid')!="" && $this->session->userdata('adm_admin_loginid')>0)		{					$data2 = array(				'fld_logout_time'		=> date('Y-m-d H:i:s'),			);			$this->db->where('id', $this->session->userdata('adm_admin_loginid'));				$query2 = $this->db->update('tbl_login_history',$data2);		}		$this->session->unset_userdata('adm_logged_in');		$this->session->unset_userdata('adm_admin_type');		$this->session->unset_userdata('adm_admin_name');		$this->session->unset_userdata('adm_admin_email');		$this->session->unset_userdata('adm_admin_phone');		$this->session->unset_userdata('adm_admin_id');				$this->session->unset_userdata('adm_admin_loginid');				$this->session->unset_userdata('ORDER_ID');				$this->session->unset_userdata('lastorderid');				$this->session->unset_userdata('COUPON_ID');				$this->session->unset_userdata('RCHRG_AMOUNT','');				$this->session->unset_userdata('slctsrv');				redirect(base_url());		exit;	}	}